{% extends 'layouts/base.twig' %}
{% trans_default_domain 'prompts' %}

{% set entityLow	= app.request.attributes.get('_route')|split('_')[0] %}
{% set entity		= entityLow|capitalize %}
{% set editPath		= entityLow ~ '_form' %}
{% set deletePath	= entityLow ~ '_delete_form' %}

{% if table.width is not defined or table.width > 12 or table.width < 1 %}
	{% set table = table|merge({'width': 12}) %}
{% endif %}

{% set columns = pagination.getCustomParameter('columns') %}
{% set search = pagination.getCustomParameter('search') %}

{% set unsort_css = 'oi oi-elevator unsorted' %}
{% if pagination.getDirection == 'asc' %}
	{% set sort_css = 'oi oi-caret-bottom sorted' %}
{% elseif pagination.getDirection == 'desc' %}
	{% set sort_css = 'oi oi-caret-top sorted' %}
{% else %}
	{% set sort_css = unsort_css %}
{% endif %}

{% set n_start	= (pagination.getCurrentPageNumber - 1) * pagination.getItemNumberPerPage + 1 %}
{% set n_end	= pagination.getCurrentPageNumber * pagination.getItemNumberPerPage %}

{% if n_end > pagination.getTotalItemCount %}
	{% set n_end	= pagination.getTotalItemCount %}
{% endif %}


{% block body %}

<form id="form-resp" action="{{ path(app.request.attributes.get('_route'), app.request.attributes.get('_route_params')) }}" method="get">
	<input type="hidden" name="limit" id="limit" value="{{ pagination.getItemNumberPerPage }}" />
	<input type="hidden" name="page" id="page" value="1" />

<div class="row list-container">
	<div class="col-sm-{{ table.width }}">
		{# 															Add Button #}
		<nav class="navbar navbar-expand-lg navbar-light dashboard-list">
			<h2>{{ entityTitle|trans|capitalize }}</h2>
			<button id="rec-0" type="button" data-toggle="modal" data-target="#modal_dialog" class="btn btn-success oi oi-plus add-item" title="{{ 'title.create'|trans|capitalize }}"></button>
		</nav>
		{# 															Limit, Search #}
		<div class="row">
			<div class="col-sm-3">
				<div class="btn-group page-limit">
					<button class="btn btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
						{{ 'pager.limitMenu'|trans|replace({'_LIMIT_':pagination.getItemNumberPerPage}) }}
					</button>
					<div class="dropdown-menu">
						<a id="limit_5"  class="dropdown-item limit" href="#">5</a>
						<a id="limit_10" class="dropdown-item limit" href="#">10</a>
						<a id="limit_25" class="dropdown-item limit" href="#">25</a>
						<a id="limit_50" class="dropdown-item limit" href="#">50</a>
						<a id="limit_100" class="dropdown-item limit" href="#">100</a>
					</div>
				</div>
			</div>
			<div class="col-sm-9">
				<div class="input-group mb-1 search-block">
					<div class="input-group-prepend">
						<button id="clear_search_btn" class="input-group-text oi oi-x search-button" title="{{ 'hint.clear_filer'|trans|capitalize }}"></button>
					</div>
					<input type="text" id="search" name="search" value="{{ search }}" class="form-control search-input" placeholder="{{ 'title.search'|trans|capitalize }}" aria-label="Recipient's username" aria-describedby="basic-addon2">
					<div class="input-group-append">
						<button id="search_btn" class="input-group-text oi oi-magnifying-glass search-button" title="{{ 'button.find'|trans|capitalize }}"></button>
					</div>
				</div>
			</div>
		</div>

		<table class="table pager-list table-striped table-sm table-bordered">
			{# 															Header #}
			<thead class="thead-light">
				<tr>
				{% for field_opts in columns %}
					{% set value = field_opts.title|trans|capitalize %}
					{% set field_db = 'record.' ~ field_opts.field %}

					<th scope="col" class="pager-col-title">

					{% if field_opts.sortable %}
						{{ knp_pagination_sortable(pagination, value, field_db ) }}
						<span class="{% if pagination.isSorted(field_db) %}{{ sort_css }}{% else %}{{ unsort_css }}{% endif %}"></span>
					{% else %}
						{{ value }}
					{% endif %}
					</th>
				{% endfor %}
				</tr>
			</thead>
			{# 															Table content #}
			<tbody>
			{% for record in pagination %}
				{% if loop.index is odd %}
					{% set bgcolor_tr = 'odd_color' %}
				{% else %}
					{% set bgcolor_tr = 'even_color' %}
				{% endif %}

				{% if record.stressed is defined and record.stressed %}
					{% set bgcolor_tr = bgcolor_tr ~ '_stressed' %}
				{% endif %}

				<tr id="rec-{{ record.id }}" class="{{ bgcolor_tr }} list-row">
				{% for field_opts in columns %}
					<td class="list-sell {{ field_opts.css }}">{{ attribute(record, field_opts.field) }} </td>
				{% endfor %}
				</tr>
			{% endfor %}
			</tbody>
		</table>
		{# 																Paging #}
		<div class="row">
			<div class="col-sm-4">&nbsp;</div>
			<div class="col-sm-8">
				<div class="pager-info">
					{{ 'pager.info'|trans|replace({'_START_':n_start,'_END_':n_end,_TOTAL_:pagination.getTotalItemCount}) }}
				</div>
				<div class="navigation">
					{{ knp_pagination_render(pagination) }}
				</div>
			</div>
		</div>
	</div>
</div>

{#

	{% if table.input.isActive is defined %}
		<input type="hidden" name="showActive" id="showActive" value="{{ table.input.isActive.value }}" />
	{% endif %}

	{% if table.input.currency is defined %}
		<input type="hidden" name="currency" id="currency" value="{{ table.input.currency.item.id }}" />
	{% endif %}
	#}

</form>

<div id="table_row_tool" class="table-row-tool" >
	<table cellpadding="0" cellspacing="0" border="0">
		<tbody>
		<tr>
			<td class="row-tool-pointer-td"><canvas width="20" height="44" id="row_tool_pointer" class="row-tool-pointer"></canvas></td>
			<td class="row-tool-actions">
				<ul class="list-group">
					<li action="edit" class="list-group-item list-group-item-primary" data-toggle="modal" data-target="#modal_dialog">{{ 'title.edit'|trans|capitalize }}</li>
					<li action="delete" class="list-group-item list-group-item-primary">{{ 'title.delete'|trans|capitalize }}</li>
				</ul>
			</td>
		</tr>
		</tbody>
	</table>
</div>

{% endblock %}

{% block javascripts %}
<script type="text/javascript">

$(document).ready(function(){

    let list_tr		= null
		,tpointer	= document.getElementById("row_tool_pointer")
    	,ctx		= tpointer.getContext("2d")
    	,cfn		= 1,
    	entity_id	= 0
	;

    ctx.fillStyle = "#b8daff";
    ctx.strokeStyle = "#a1bfdf";
    ctx.beginPath();
    ctx.moveTo(20*cfn, 3*cfn);
    ctx.quadraticCurveTo(16*cfn, 11*cfn, 0, 15*cfn);
    ctx.quadraticCurveTo(14*cfn, 17*cfn, 20*cfn, 44*cfn);
    ctx.stroke();
    ctx.lineTo(20*cfn, 0);
    ctx.closePath();
    ctx.fill();

	$("tr.list-row").on('click',function (event) {
		let xmin= $(this).offset().left
            ,x	= event.pageX - 40
            ,y	= $(this).offset().top - 10
		;

		x	= (xmin > x) ? xmin : x;

		$("#table_row_tool")
			.css('visibility','visible')
			.offset({ top: y, left: x });

        entity_id	= $(this).attr("id").split("-")[1];
	});

	$("#table_row_tool ul li, #row_tool_pointer").on('mouseout',function (event) {
		event.stopPropagation();
	});

	$("#table_row_tool").on('mouseout',function (event) {
		$("#table_row_tool")
			.css('visibility','hidden');
	});

    $("#table_row_tool td.row-tool-actions li").on('click',function (event) {
        let action	= $(this).attr("action");

        switch( action ){
            case "edit":	openEditFormModal(entity_id); break;
            case "delete":	openDeleteModal(entity_id); break;
        }

		$("#table_row_tool")
			.css('visibility','hidden');
	})
		.attr("data-toggle", "modal")
		.attr("data-target", "#modal_dialog")
	;

    $("button.add-item").on('click',function (event) {
        openEditFormModal( $(this).attr("id").split("-")[1] );
    })
        .attr("data-toggle", "modal")
        .attr("data-target", "#modal_dialog")
    ;

    $("#limit_{{ pagination.getItemNumberPerPage }}").addClass("active");

    $(".limit").on('click',function (event) {
        $("#limit").val($(this).html() );
        $('form#form-resp').submit();
    });

    $("#search_btn").on("click",function (event) {
        $('form#form-resp').submit();
    });

    $("#clear_search_btn").on("click",function (event) {
        $("#search").val("");
        $("form#form-resp").submit();
    });

});
//______________________________________________________________________________

{#
/**
 *
 * @param obj
 * @param size - value to increase button. Must be even.
 */
function clearSearchBtnHover( obj, size ){
	let new_size = obj.css("font-size");
	new_size	= (parseInt(new_size.substring(0,(new_size.length-2))) + size) + "px";
	obj.css("font-size", new_size);

	new_size	= obj.css("padding-left");
	obj.css("padding-left",((parseInt(new_size.substring(0,(new_size.length-2))) - size/2 )+"px"));

	new_size	= obj.css("padding-right");
	obj.css("padding-right",((parseInt(new_size.substring(0,(new_size.length-2))) - size/2 )+"px"));
}
//______________________________________________________________________________

$(function() {
	{% if table.data != null %}
		$('#table_body').initDataTables( {{ datatable_settings(table.data) }} )
			.then( function() {
				let entity	= $("table[id^='list_']").attr("id");
				entity	= entity.split("_");
				entity	= entity[1];

				dt.on( 'draw', function () {
					$("table[id^='list_'] tbody tr")
						.click(function(){ openEditFormModal($(this)); })
						.attr("data-toggle", "modal")
						.attr("data-target", "#modal_dialog")
					;
				});

				$("table[id^='list_'] tbody tr, button[item]")
					.click(function(){ openEditFormModal($(this)); })
					.attr("data-toggle", "modal")
					.attr("data-target", "#modal_dialog")
				;

				dt.search( "{{ table.input.search.value }}" ).draw();

				$("div.dataTables_filter label").append('<button type="button" class="btn oi oi-circle-x clear-search" title="{{ 'hint.clear_filer'|trans }}"></button>');

				$("div.dataTables_filter label button.clear-search").on('click',function (event) {
					dt.search( "" ).draw();
                });

                $("div.dataTables_filter label button.clear-search").on('mousedown',function (event) {
					clearSearchBtnHover( $(this), +2 );
                });

                $("div.dataTables_filter label button.clear-search").on('mouseup',function (event) {
					clearSearchBtnHover( $(this), -2 );
                });


		{% if table.input.isActive is defined %}

				$("div.dataTables_filter").prepend(
					'<div class="form-check form-check-inline">'+
						'<label class="form-check-label" for="show_active">{{ 'title.showInStock'|trans }}</label>'+
						'<input class="form-check-input" type="checkbox" id="show_active" name="show_active" value="option1" {{ table.input.isActive.value }} />'+
					'</div>'
				);

				$("#show_active").on('change',function (event) {
					let checked	= $(this).is(":checked") ? "checked" : "";
					$("#searchStr").val('');
					$("#showActive").val(checked);
					$('form#form-resp').submit();
				});
		{% endif %}

		{% if table.input.currency is defined %}
				let list = '';

				{% for curr in table.input.currency.list %}
					list = list + '<a class="dropdown-item" currency="{{ curr.id }}" href="#">{{ curr.name }}</a>';
				{% endfor %}

				$("div.dataTables_filter").prepend(
'<div class="btn-group currency-sel-box">' +
	'<label class="form-check-label" for="currency_btn">{{ 'title.currency'|trans|capitalize }}</label>'+
	'<button class="btn btn-sm" type="button" id="currency_btn">{{ table.input.currency.item.name }}</button>' +
	'<button type="button" class="btn btn-sm dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>' +
	'<div class="dropdown-menu">' + list + '</div>' +
'</div>'+
''
				);

				$("a[currency]").on('click',function (event) {
					$("#currency").val($(this).attr("currency"));
					$('form#form-resp').submit();
				})

		{% endif %}

			});

	{% endif %}
});
//______________________________________________________________________________
#}


</script>
{% endblock %}